@model RestaurantManagementSystem.Models.DashboardViewModel
@{
    ViewData["Title"] = "Restaurant Dashboard";
}

<!-- Add jQuery FIRST, before other plugins -->
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>

<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chart.js">
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<style>
    :root {
        --primary-color: #3498db;
        --secondary-color: #2ecc71;
        --accent-color: #f39c12;
        --danger-color: #e74c3c;
        --dark-color: #2c3e50;
        --light-color: #ecf0f1;
        --info-color: #1abc9c;
    }
    
    body {
        background-color: #f8f9fa;
        color: var(--dark-color);
    }
    
    .dashboard-header {
        background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
        color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }
    
    .dashboard-header h1 {
        margin: 0;
        font-weight: 300;
        font-size: 2.5rem;
    }
    
    .dashboard-header p {
        margin-top: 10px;
        opacity: 0.9;
        font-size: 1.1rem;
    }
    
    .stats-card {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 20px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }
    
    .stats-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
    }
    
    .stats-card .icon {
        font-size: 2rem;
        margin-bottom: 15px;
        display: inline-block;
        padding: 15px;
        border-radius: 50%;
        color: white;
    }
    
    .stats-card.sales .icon {
        background-color: var(--primary-color);
    }
    
    .stats-card.orders .icon {
        background-color: var(--secondary-color);
    }
    
    .stats-card.customers .icon {
        background-color: var(--accent-color);
    }
    
    .stats-card.inventory .icon {
        background-color: var(--info-color);
    }
    
    .stats-card h3 {
        font-size: 1.5rem;
        margin-bottom: 5px;
        font-weight: 600;
    }
    
    .stats-card p.number {
        font-size: 2rem;
        margin-bottom: 0;
        font-weight: 700;
    }
    
    .stats-card p.text-muted {
        font-size: 0.9rem;
    }
    
    .chart-container {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 20px;
    }
    
    .data-table-container {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 20px;
    }
    
    .data-table-container h3 {
        margin-bottom: 20px;
        color: var(--dark-color);
        border-bottom: 2px solid var(--primary-color);
        padding-bottom: 10px;
    }
    
    .action-buttons .btn {
        margin-right: 10px;
        border-radius: 5px;
    }
    
    .reservation-container {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 20px;
    }
    
    .table-responsive {
        overflow-x: auto;
    }
    
    .badge-custom {
        padding: 5px 10px;
        border-radius: 20px;
        font-weight: 500;
    }
    
    .badge-success {
        background-color: var(--secondary-color);
        color: white;
    }
    
    .badge-warning {
        background-color: var(--accent-color);
        color: white;
    }
    
    .badge-danger {
        background-color: var(--danger-color);
        color: white;
    }
    
    .cuisine-search {
        position: relative;
        margin-bottom: 20px;
    }
    
    .cuisine-results {
        position: absolute;
        width: 100%;
        z-index: 1000;
        max-height: 200px;
        overflow-y: auto;
        border-radius: 0 0 10px 10px;
    }
    
    .reservation-form .form-control {
        margin-bottom: 15px;
    }
    
    .quick-actions {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin-bottom: 20px;
    }
    
    .quick-action-btn {
        flex: 1;
        text-align: center;
        padding: 15px;
        background-color: var(--light-color);
        border-radius: 10px;
        transition: all 0.3s ease;
    }
    
    .quick-action-btn:hover {
        background-color: var(--primary-color);
        color: white;
        cursor: pointer;
    }
    
    .quick-action-btn i {
        font-size: 1.5rem;
        margin-bottom: 10px;
        display: block;
    }
</style>

@{
    ViewData["Title"] = "Home Page";
}

<div class="container-fluid p-0">
    <div class="dashboard-container">
        <div class="dashboard-header">
            <h1><i class="fas fa-utensils me-2"></i>Restaurant Dashboard</h1>
            <p class="text-muted">Welcome to your restaurant management system</p>
        </div>
        

        <!-- Stats Cards -->
        <div class="row stats-container">
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="stats-card sales">
                    <span class="icon"><i class="fas fa-dollar-sign"></i></span>
                    <h3>Today's Sales</h3>
                    <p class="number">$@Model.TodaySales.ToString("N2")</p>
                </div>
            </div>
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="stats-card orders">
                    <span class="icon"><i class="fas fa-shopping-cart"></i></span>
                    <h3>Today's Orders</h3>
                    <p class="number">@Model.TodayOrders</p>
                </div>
            </div>
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="stats-card tables">
                    <span class="icon"><i class="fas fa-chair"></i></span>
                    <h3>Active Tables</h3>
                    <p class="number">@Model.ActiveTables</p>
                </div>
            </div>
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="stats-card reservations">
                    <span class="icon"><i class="fas fa-calendar-check"></i></span>
                    <h3>Upcoming Reservations</h3>
                    <p class="number">@Model.UpcomingReservations</p>
                </div>
            </div>
        </div>    <!-- Quick Action Buttons -->
    <div class="row mb-4">
        <div class="col-12">
            <h4 class="mb-3">Quick Actions</h4>
            <div class="quick-actions">
                <div class="quick-action-btn">
                    <i class="fas fa-utensils"></i>
                    <span>New Order</span>
                </div>
                <div class="quick-action-btn">
                    <i class="fas fa-calendar-check"></i>
                    <span>Reservations</span>
                </div>
                <div class="quick-action-btn">
                    <i class="fas fa-cash-register"></i>
                    <span>Checkout</span>
                </div>
                <div class="quick-action-btn">
                    <i class="fas fa-chart-bar"></i>
                    <span>Reports</span>
                </div>
                <div class="quick-action-btn">
                    <i class="fas fa-cog"></i>
                    <span>Settings</span>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Sales Chart -->
        <div class="col-lg-8 mb-4">
            <div class="chart-container">
                <h3>Sales Overview</h3>
                <canvas id="salesChart" height="300"></canvas>
            </div>
        </div>

        <!-- Reservation Form -->
        <div class="col-lg-4 mb-4">
            <div class="reservation-container">
                <h3>Quick Reservation</h3>
                <div class="reservation-form">
                    <div class="form-group">
                        <label for="customerName">Customer Name</label>
                        <input type="text" id="customerName" class="form-control" placeholder="Enter customer name">
                    </div>
                    <div class="form-group">
                        <label for="reservationDate">Date</label>
                        <input type="text" id="reservationDate" class="form-control" placeholder="Select date">
                    </div>
                    <div class="form-group">
                        <label for="reservationTime">Time</label>
                        <input type="text" id="reservationTime" class="form-control" placeholder="Select time">
                    </div>
                    <div class="form-group">
                        <label for="partySize">Party Size</label>
                        <select id="partySize" class="form-control">
                            <option>1 person</option>
                            <option>2 people</option>
                            <option>3 people</option>
                            <option>4 people</option>
                            <option>5 people</option>
                            <option>6 people</option>
                            <option>7+ people</option>
                        </select>
                    </div>
                    <button class="btn btn-primary w-100 mt-3">Make Reservation</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Orders Table -->
    <div class="row">
        <div class="col-12 mb-4">
            <div class="data-table-container">
                <h3>Recent Orders</h3>
                <div class="table-responsive">
                    <table id="restaurantTable" class="table table-striped">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Table</th>
                                <th>Total</th>
                                <th>Status</th>
                                <th>Time</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.RecentOrders)
                            {
                                <tr>
                                    <td>#ORD-@order.OrderId</td>
                                    <td>@order.CustomerName</td>
                                    <td>@(order.TableNumber > 0 ? order.TableNumber.ToString() : "Takeout")</td>
                                    <td>$@order.TotalAmount.ToString("N2")</td>
                                    <td>
                                        @{
                                            string badgeClass = order.Status.ToLower() switch
                                            {
                                                "completed" => "badge-success",
                                                "in progress" or "preparing" => "badge-warning",
                                                "cancelled" => "badge-danger",
                                                "pending" => "badge-info",
                                                _ => "badge-secondary"
                                            };
                                        }
                                        <span class="badge badge-custom @badgeClass">@order.Status</span>
                                    </td>
                                    <td>@order.OrderTime</td>
                                    <td>
                                        <a href="@Url.Action("Details", "Order", new { id = order.OrderId })" class="btn btn-sm btn-primary"><i class="fas fa-eye"></i></a>
                                        <button class="btn btn-sm btn-info print-order" data-order-id="@order.OrderId"><i class="fas fa-print"></i></button>
                                    </td>
                                </tr>
                            }
                            @if (!Model.RecentOrders.Any())
                            {
                                <tr>
                                    <td colspan="7" class="text-center">No recent orders found</td>
                                </tr>
                            }
                            <tr>
                                <td>#ORD-2342</td>
                                <td>Emily Davis</td>
                                <td>Chicken Burrito, Nachos</td>
                                <td>$16.99</td>
                                <td><span class="badge badge-custom badge-danger">Cancelled</span></td>
                                <td>9:30 AM</td>
                                <td>
                                    <button class="btn btn-sm btn-primary"><i class="fas fa-eye"></i></button>
                                    <button class="btn btn-sm btn-info"><i class="fas fa-print"></i></button>
                                </td>
                            </tr>
                            <tr>
                                <td>#ORD-2341</td>
                                <td>Michael Brown</td>
                                <td>Margherita Pizza, Garlic Knots</td>
                                <td>$20.50</td>
                                <td><span class="badge badge-custom badge-success">Completed</span></td>
                                <td>9:15 AM</td>
                                <td>
                                    <button class="btn btn-sm btn-primary"><i class="fas fa-eye"></i></button>
                                    <button class="btn btn-sm btn-info"><i class="fas fa-print"></i></button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Most Popular Menu Items -->
    <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="chart-container">
                <h3>Popular Menu Items</h3>
                <canvas id="menuItemsChart" height="300"></canvas>
            </div>
        </div>

        <div class="col-lg-6 mb-4">
            <div class="chart-container">
                <h3>Customers by Time</h3>
                <canvas id="customerTimeChart" height="300"></canvas>
            </div>
        </div>
    </div>
    
    <!-- Cuisine Search -->
    <div class="row">
        <div class="col-md-6 mb-4">
            <div class="data-table-container">
                <h3>Cuisine Search</h3>
                <div class="cuisine-search">
                    <input type="text" id="cuisineSearch" class="form-control" placeholder="Search for cuisines">
                    <div class="cuisine-results">
                        <ul id="cuisineList" class="list-group"></ul>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="data-table-container">
                <h3>Low Inventory Items</h3>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Item</th>
                                <th>Current Stock</th>
                                <th>Minimum</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.LowInventoryItems)
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td>@item.CurrentStock @item.Unit</td>
                                    <td>@item.MinimumStock @item.Unit</td>
                                    <td>
                                        @{
                                            string badgeClass = "badge-danger";
                                            string status = "Critical";
                                            
                                            if (item.CurrentStock >= item.MinimumStock * 0.5m)
                                            {
                                                badgeClass = "badge-warning";
                                                status = "Low";
                                            }
                                        }
                                        <span class="badge badge-custom @badgeClass">@status</span>
                                    </td>
                                </tr>
                            }
                            @if (!Model.LowInventoryItems.Any())
                            {
                                <tr>
                                    <td colspan="4" class="text-center">No low inventory items</td>
                                </tr>
                            }
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- Initialize charts and scripts -->
    <script>
        $(document).ready(function () {
            // Initialize DataTable
            $('#restaurantTable').DataTable({
                responsive: true,
                "pageLength": 5,
                "lengthMenu": [[5, 10, 25, -1], [5, 10, 25, "All"]]
            });
            
            // Initialize Date and Time pickers
            $("#reservationDate").datepicker();
            $("#reservationTime").timepicker({
                'timeFormat': 'h:i A',
                'interval': 30,
                'minTime': '10',
                'maxTime': '11:00pm',
                'startTime': '10:00',
                'dynamic': false,
                'dropdown': true,
                'scrollbar': true
            });

            // Sales Chart - Get data from model
            var salesLabels = @Html.Raw(Json.Serialize(Model.SalesData.Select(x => x.Day).ToArray()));
            var salesData = @Html.Raw(Json.Serialize(Model.SalesData.Select(x => x.Amount).ToArray()));
            
            // Generate last week data as 90% of this week for demonstration
            var lastWeekData = salesData.map(function(val) { 
                return Math.round(val * 0.9); 
            });

            var salesCtx = document.getElementById('salesChart').getContext('2d');
            var salesChart = new Chart(salesCtx, {
                type: 'line',
                data: {
                    labels: salesLabels,
                    datasets: [{
                        label: 'This Week',
                        data: salesData,
                        backgroundColor: 'rgba(52, 152, 219, 0.2)',
                        borderColor: 'rgba(52, 152, 219, 1)',
                        borderWidth: 2,
                        pointBackgroundColor: 'rgba(52, 152, 219, 1)',
                        tension: 0.3
                    }, {
                        label: 'Last Week',
                        data: lastWeekData,
                        backgroundColor: 'rgba(46, 204, 113, 0.2)',
                        borderColor: 'rgba(46, 204, 113, 1)',
                        borderWidth: 2,
                        pointBackgroundColor: 'rgba(46, 204, 113, 1)',
                        tension: 0.3
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return '$' + value;
                                }
                            }
                        }
                    }
                }
            });

            // Popular Menu Items Chart - Get data from model
            var menuItemLabels = @Html.Raw(Json.Serialize(Model.PopularMenuItems.Select(x => x.Name).ToArray()));
            var menuItemData = @Html.Raw(Json.Serialize(Model.PopularMenuItems.Select(x => x.OrderCount).ToArray()));
            
            var menuItemsCtx = document.getElementById('menuItemsChart').getContext('2d');
            var menuItemsChart = new Chart(menuItemsCtx, {
                type: 'doughnut',
                data: {
                    labels: menuItemLabels,
                    datasets: [{
                        data: menuItemData,
                        backgroundColor: [
                            'rgba(52, 152, 219, 0.8)',
                            'rgba(46, 204, 113, 0.8)',
                            'rgba(243, 156, 18, 0.8)',
                            'rgba(231, 76, 60, 0.8)',
                            'rgba(155, 89, 182, 0.8)'
                        ],
                        borderColor: [
                            'rgba(52, 152, 219, 1)',
                            'rgba(46, 204, 113, 1)',
                            'rgba(243, 156, 18, 1)',
                            'rgba(231, 76, 60, 1)',
                            'rgba(155, 89, 182, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'right',
                        }
                    }
                }
            });

            // Customers by Time Chart - Get data from model
            var timeLabels = @Html.Raw(Json.Serialize(Model.CustomersByTime.Select(x => x.Hour + (x.Hour >= 12 ? " PM" : " AM")).ToArray()));
            var customerData = @Html.Raw(Json.Serialize(Model.CustomersByTime.Select(x => x.CustomerCount).ToArray()));
            
            var customerTimeCtx = document.getElementById('customerTimeChart').getContext('2d');
            var customerTimeChart = new Chart(customerTimeCtx, {
                type: 'bar',
                data: {
                    labels: timeLabels,
                    datasets: [{
                        label: 'Number of Customers',
                        data: customerData,
                        backgroundColor: 'rgba(52, 152, 219, 0.8)',
                        borderColor: 'rgba(52, 152, 219, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Number of Customers'
                            }
                        }
                    }
                }
            });

            // Cuisine Search
            const cuisines = ["Indian", "Chinese", "Italian", "Mexican", "Thai", "Japanese", "Korean", "Mediterranean", "French", "American"];
            $('#cuisineSearch').on('input', function () {
                let val = $(this).val().toLowerCase();
                if (val.length > 0) {
                    let filtered = cuisines.filter(c => c.toLowerCase().includes(val));
                    $('#cuisineList').empty();
                    filtered.forEach(c => {
                        $('#cuisineList').append(`<li class="list-group-item">${c}</li>`);
                    });
                } else {
                    $('#cuisineList').empty();
                }
            });

            // Make list items clickable
            $(document).on('click', '#cuisineList li', function() {
                $('#cuisineSearch').val($(this).text());
                $('#cuisineList').empty();
            });

            // Hide list when clicking outside
            $(document).on('click', function(e) {
                if (!$(e.target).closest('.cuisine-search').length) {
                    $('#cuisineList').empty();
                }
            });
        });
    </script>
</div>
