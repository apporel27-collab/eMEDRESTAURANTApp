@model RestaurantManagementSystem.Models.RecipeViewModel
@{
    ViewData["Title"] = "Recipe Debug";
    var menuItem = ViewBag.MenuItem as RestaurantManagementSystem.Models.MenuItem;
}

<div class="container-fluid py-3">
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-primary text-white py-2">
            <h5 class="mb-0">Recipe Debug Console</h5>
        </div>
        <div class="card-body">
            <div id="debugLog" class="bg-dark text-light p-3 rounded mb-3" style="height: 300px; overflow-y: auto;">
                <div id="logEntries">
                    <div class="log-entry">Initializing debug console...</div>
                </div>
            </div>
            
            <div class="row mb-3">
                <div class="col-md-6">
                    <button id="checkDbSetup" class="btn btn-info">Check Database Setup</button>
                    <button id="checkTableExistence" class="btn btn-warning">Check Tables</button>
                    <button id="checkSPExistence" class="btn btn-secondary">Check Stored Procedures</button>
                </div>
            </div>
            
            <div class="row mb-3">
                <div class="col-md-6">
                    <form id="recipeCreateForm" asp-action="Create" method="post">
                        <input type="hidden" asp-for="MenuItemId" value="1" />
                        <input type="hidden" asp-for="Title" value="Test Recipe" />
                        <input type="hidden" asp-for="PreparationInstructions" value="Test prep instructions" />
                        <input type="hidden" asp-for="CookingInstructions" value="Test cooking instructions" />
                        <input type="hidden" asp-for="Yield" value="1" />
                        <input type="hidden" asp-for="YieldPercentage" value="100" />
                        <input type="hidden" asp-for="PreparationTimeMinutes" value="15" />
                        <input type="hidden" asp-for="CookingTimeMinutes" value="15" />
                        <button type="submit" class="btn btn-success">Test Recipe Creation</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function logMessage(message, type = 'info') {
            const logContainer = document.getElementById('logEntries');
            const entry = document.createElement('div');
            entry.className = 'log-entry ' + type;
            entry.innerHTML = `<span class="time">[${new Date().toLocaleTimeString()}]</span> ${message}`;
            
            if (type === 'error') {
                entry.style.color = '#ff6b6b';
            } else if (type === 'success') {
                entry.style.color = '#69db7c';
            } else if (type === 'warning') {
                entry.style.color = '#ffd43b';
            }
            
            logContainer.appendChild(entry);
            document.getElementById('debugLog').scrollTop = document.getElementById('debugLog').scrollHeight;
        }
        
        $(document).ready(function() {
            logMessage('Debug console ready');
            
            $('#checkDbSetup').click(function() {
                logMessage('Checking database setup...');
                $.ajax({
                    url: '@Url.Action("SetupRecipeScripts")',
                    method: 'GET',
                    success: function(result) {
                        if (result.success) {
                            logMessage('Setup complete: ' + result.message, 'success');
                        } else {
                            logMessage('Setup failed: ' + result.message, 'error');
                        }
                    },
                    error: function(xhr, status, error) {
                        logMessage('Error checking setup: ' + error, 'error');
                    }
                });
            });
            
            $('#checkTableExistence').click(function() {
                logMessage('Checking database tables...');
                $.ajax({
                    url: '@Url.Action("CheckRecipeTables")',
                    method: 'GET',
                    success: function(result) {
                        logMessage('Tables check result: ' + JSON.stringify(result), result.allTablesExist ? 'success' : 'warning');
                    },
                    error: function(xhr, status, error) {
                        logMessage('Error checking tables: ' + error, 'error');
                    }
                });
            });
            
            $('#checkSPExistence').click(function() {
                logMessage('Checking stored procedures...');
                $.ajax({
                    url: '@Url.Action("CheckRecipeStoredProcedures")',
                    method: 'GET',
                    success: function(result) {
                        logMessage('SP check result: ' + JSON.stringify(result), result.allProceduresExist ? 'success' : 'warning');
                    },
                    error: function(xhr, status, error) {
                        logMessage('Error checking SPs: ' + error, 'error');
                    }
                });
            });
            
            $('#recipeCreateForm').submit(function(e) {
                e.preventDefault();
                logMessage('Testing recipe creation...');
                
                $.ajax({
                    url: $(this).attr('action'),
                    method: 'POST',
                    data: $(this).serialize(),
                    success: function(result) {
                        logMessage('Recipe created successfully!', 'success');
                    },
                    error: function(xhr, status, error) {
                        logMessage('Error creating recipe: ' + xhr.responseText, 'error');
                    }
                });
            });
        });
    </script>
}
