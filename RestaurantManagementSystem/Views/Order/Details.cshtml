@model OrderViewModel
@{
    ViewData["Title"] = "Order Details";
}

<div class="container-fluid p-2">
    <div class="row g-2 align-items-center mb-2">
        <div class="col-md-8 d-flex flex-wrap align-items-center gap-2">
            <form asp-action="QuickAddMenuItem" method="post" class="d-flex flex-row align-items-center gap-2 mb-0 p-0">
                <input type="hidden" name="orderId" value="@Model.Id" />
                <label for="menuItemInput" class="form-label mb-0">Add Menu Item:</label>
                <input list="menuItems" id="menuItemInput" name="menuItemNameOrId" class="form-control form-control-sm w-auto" style="min-width:200px;" placeholder="Type to search..." autocomplete="off" required />
                <datalist id="menuItems">
                    @foreach (var item in Model.AvailableMenuItems)
                    {
                        <option value="@item.Name" data-id="@item.Id">@item.Name (₹@item.Price.ToString("F2"))</option>
                    }
                </datalist>
                <input type="number" name="quantity" min="1" value="1" class="form-control form-control-sm w-auto" style="max-width:70px;" required />
                <button type="submit" class="btn btn-success btn-sm"><i class="fas fa-plus"></i> Add</button>
            </form>
            <button type="button" class="btn btn-sm btn-warning ms-2" data-bs-toggle="modal" data-bs-target="#fireItemsModal">
                <i class="fas fa-fire"></i> Fire to Kitchen
            </button>
            <a asp-action="Dashboard" class="btn btn-outline-secondary btn-sm ms-2">
                <i class="fas fa-arrow-left"></i> Back
            </a>
            <!-- Removed Add Items button as requested -->
            <a asp-controller="Payment" asp-action="Index" asp-route-id="@Model.Id" class="btn btn-success btn-sm ms-2">
                <i class="fas fa-credit-card"></i> Payment
            </a>
        </div>
        <div class="col-md-4 text-end">
            <span class="fs-5 fw-bold">Order #: @Model.OrderNumber</span>
        </div>
    </div>
    <div class="row g-2">
        <div class="col-lg-8">
            <div class="card mb-2 shadow-sm">
                <div class="card-header py-2 px-3 bg-light d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">Order Items</h6>
                </div>
                <div class="card-body p-2">
                    @if (Model.Items.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th style="width: 5%"></th>
                                        <th style="width: 40%">Item</th>
                                        <th style="width: 10%">Qty</th>
                                        <th style="width: 15%">Price</th>
                                        <th style="width: 15%">Subtotal</th>
                                        <th style="width: 15%">Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        string currentCourse = null;
                                    }
                                    @foreach (var item in Model.Items)
                                    {
                                        @if (item.CourseName != currentCourse && !string.IsNullOrEmpty(item.CourseName))
                                        {
                                            <tr class="table-secondary">
                                                <td colspan="6"><strong>@item.CourseName</strong></td>
                                            </tr>
                                            currentCourse = item.CourseName;
                                        }
                                        <tr>
                                            <td>
                                                @if (item.Status == 0)
                                                {
                                                    <input type="checkbox" class="fireItem" value="@item.Id" form="fireItemsForm" name="SelectedItems" />
                                                    <form asp-action="CancelOrderItem" method="post" class="d-inline-block ms-1" onsubmit="return confirm('Are you sure you want to cancel this item?');">
                                                        <input type="hidden" name="orderId" value="@Model.Id" />
                                                        <input type="hidden" name="orderItemId" value="@item.Id" />
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" title="Cancel Item">
                                                            <i class="fas fa-times"></i>
                                                        </button>
                                                    </form>
                                                }
                                                else
                                                {
                                                    <i class="fas fa-check-circle text-success"></i>
                                                }
                                            </td>
                                            <td>
                                                <div><strong>@item.MenuItemName</strong></div>
                                                @if (item.Modifiers.Any())
                                                {
                                                    <div class="text-muted small">
                                                        @foreach (var mod in item.Modifiers)
                                                        {
                                                            <span class="badge bg-secondary me-1">@mod.ModifierName @(mod.Price > 0 ? $"+${mod.Price:F2}" : "")</span>
                                                        }
                                                    </div>
                                                }
                                                <form asp-action="UpdateOrderItemQty" method="post" class="d-flex align-items-center gap-2 mt-1">
                                                    <input type="hidden" name="orderId" value="@Model.Id" />
                                                    <input type="hidden" name="orderItemId" value="@item.Id" />
                                                    <input type="number" name="quantity" value="@item.Quantity" min="1" class="form-control form-control-sm w-auto" style="max-width:60px;" onchange="this.form.submit();" />
                                                    <input type="text" name="specialInstructions" value="@item.SpecialInstructions" placeholder="Note" class="form-control form-control-sm w-auto" style="max-width:120px;" onchange="this.form.submit();" />
                                                </form>
                                            </td>
                                            <td class="align-middle">@item.Quantity</td>
                                            <td class="align-middle">₹@item.UnitPrice.ToString("F2")</td>
                                            <td class="align-middle">₹@item.Subtotal.ToString("F2")</td>
                                            <td class="align-middle">
                                                @{
                                                    var badgeClass = item.Status switch
                                                    {
                                                        0 => "bg-primary",
                                                        1 => "bg-warning text-dark",
                                                        2 => "bg-info",
                                                        3 => "bg-success",
                                                        4 => "bg-dark",
                                                        5 => "bg-danger",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @badgeClass">@item.StatusDisplay</span>
                                                @if (item.FireTime.HasValue)
                                                {
                                                    <div class="small text-muted">@item.FireTime.Value.ToString("HH:mm")</div>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr class="table-light">
                                        <td colspan="4" class="text-end"><strong>Subtotal:</strong></td>
                                        <td colspan="2">
                                            <strong>
                                                ₹@((Model.Items.Where(i => i.Status != 5).Sum(i => i.Subtotal)).ToString("F2"))
                                            </strong>
                                        </td>
                                    </tr>
                                    <tr class="table-light">
                                        <td colspan="4" class="text-end">Tax:</td>
                                        <td colspan="2">₹@(Model.TaxAmount.ToString("F2"))</td>
                                    </tr>
                                    @if (Model.DiscountAmount > 0)
                                    {
                                        <tr class="table-light">
                                            <td colspan="4" class="text-end">Discount:</td>
                                            <td colspan="2">-₹@(Model.DiscountAmount.ToString("F2"))</td>
                                        </tr>
                                    }
                                    @if (Model.TipAmount > 0)
                                    {
                                        <tr class="table-light">
                                            <td colspan="4" class="text-end">Tip:</td>
                                            <td colspan="2">₹@(Model.TipAmount.ToString("F2"))</td>
                                        </tr>
                                    }
                                    <tr class="table-light">
                                        <td colspan="4" class="text-end"><strong>Total:</strong></td>
                                        <td colspan="2">
                                            <strong>
                                                ₹@((Model.Items.Where(i => i.Status != 5).Sum(i => i.Subtotal) + Model.TaxAmount + Model.TipAmount - Model.DiscountAmount).ToString("F2"))
                                            </strong>
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">
                            <p>No items added to this order yet.</p>
                            <a asp-action="BrowseMenu" asp-route-id="@Model.Id" class="btn btn-primary mt-2">
                                <i class="fas fa-utensils"></i> Browse Menu
                            </a>
                        </div>
                    }
                </div>
            </div>
            
            @if (Model.KitchenTickets.Any())
            {
                <div class="card mb-4">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">Kitchen Tickets</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Ticket #</th>
                                        <th>Items</th>
                                        <th>Status</th>
                                        <th>Created</th>
                                        <th>Completed</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ticket in Model.KitchenTickets)
                                    {
                                        <tr>
                                            <td>@ticket.TicketNumber</td>
                                            <td>@ticket.Items.Count</td>
                                            <td>
                                                @{
                                                    var badgeClass = ticket.Status switch
                                                    {
                                                        0 => "bg-primary",
                                                        1 => "bg-warning text-dark",
                                                        2 => "bg-success",
                                                        3 => "bg-dark",
                                                        4 => "bg-danger",
                                                        _ => "bg-secondary"
                                                    };
                                                }
                                                <span class="badge @badgeClass">@ticket.StatusDisplay</span>
                                            </td>
                                            <td>@ticket.CreatedAt.ToString("HH:mm")</td>
                                            <td>@(ticket.CompletedAt.HasValue ? ticket.CompletedAt.Value.ToString("HH:mm") : "-")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
        
        <div class="col-lg-4">
            <div class="card mb-2 shadow-sm">
                <div class="card-header py-2 px-3 bg-light">
                    <h6 class="mb-0">Order Info</h6>
                </div>
                <div class="card-body p-2">
                    <div class="row mb-1"><div class="col-5 text-muted">Type:</div><div class="col-7">@Model.OrderTypeDisplay</div></div>
                    <div class="row mb-1"><div class="col-5 text-muted">Status:</div><div class="col-7">
                        @{
                            var statusBadgeClass = Model.Status switch
                            {
                                0 => "bg-primary",
                                1 => "bg-warning text-dark",
                                2 => "bg-success",
                                3 => "bg-dark",
                                4 => "bg-danger",
                                _ => "bg-secondary"
                            };
                        }
                        <span class="badge @statusBadgeClass">@Model.StatusDisplay</span>
                    </div></div>
                    <div class="row mb-1"><div class="col-5 text-muted">Created:</div><div class="col-7">@Model.CreatedAt.ToString("g")</div></div>
                    <div class="row mb-1"><div class="col-5 text-muted">Server:</div><div class="col-7">@(Model.ServerName ?? "Unassigned")</div></div>
                    @if (Model.OrderType == 0)
                    {
                        <div class="row mb-1"><div class="col-5 text-muted">Table:</div><div class="col-7">@(Model.TableName ?? "No Table")</div></div>
                        <div class="row mb-1"><div class="col-5 text-muted">Guest:</div><div class="col-7">@(Model.GuestName ?? "No Name")</div></div>
                    }
                    else
                    {
                        <div class="row mb-1"><div class="col-5 text-muted">Customer:</div><div class="col-7">@(Model.CustomerName ?? "No Name")</div></div>
                        <div class="row mb-1"><div class="col-5 text-muted">Phone:</div><div class="col-7">@(Model.CustomerPhone ?? "No Phone")</div></div>
                    }
                    @if (!string.IsNullOrEmpty(Model.SpecialInstructions))
                    {
                        <div class="row mb-1"><div class="col-5 text-muted">Notes:</div><div class="col-7">@Model.SpecialInstructions</div></div>
                    }
                </div>
            </div>
            @if (Model.KitchenTickets.Any())
            {
                <div class="card mb-2 shadow-sm">
                    <div class="card-header py-2 px-3 bg-light">
                        <h6 class="mb-0">Kitchen Tickets</h6>
                    </div>
                    <div class="card-body p-2">
                        <table class="table table-sm mb-0">
                            <thead>
                                <tr>
                                    <th>Ticket #</th>
                                    <th>Items</th>
                                    <th>Status</th>
                                    <th>Created</th>
                                    <th>Completed</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var ticket in Model.KitchenTickets)
                                {
                                    <tr>
                                        <td>@ticket.TicketNumber</td>
                                        <td>@ticket.Items.Count</td>
                                        <td>
                                            @{
                                                var badgeClass = ticket.Status switch
                                                {
                                                    0 => "bg-primary",
                                                    1 => "bg-warning text-dark",
                                                    2 => "bg-success",
                                                    3 => "bg-dark",
                                                    4 => "bg-danger",
                                                    _ => "bg-secondary"
                                                };
                                            }
                                            <span class="badge @badgeClass">@ticket.StatusDisplay</span>
                                        </td>
                                        <td>@ticket.CreatedAt.ToString("HH:mm")</td>
                                        <td>@(ticket.CompletedAt.HasValue ? ticket.CompletedAt.Value.ToString("HH:mm") : "-")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Fire Items Modal -->
<div class="modal fade" id="fireItemsModal" tabindex="-1" aria-labelledby="fireItemsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="fireItemsForm" asp-action="FireItems" method="post">
                <input type="hidden" name="OrderId" value="@Model.Id" />
                <div class="modal-header">
                    <h5 class="modal-title" id="fireItemsModalLabel">Fire Items to Kitchen</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Select which items to send to the kitchen.</p>
                    
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="fireAll" name="FireAll" value="true">
                        <label class="form-check-label" for="fireAll">
                            Fire all unfired items
                        </label>
                    </div>
                    
                    <div id="itemSelection">
                        <p class="text-muted">Or select individual items:</p>
                        <ul class="list-group">
                            @foreach (var item in Model.Items.Where(i => i.Status == 0)) // Only New items
                            {
                                <li class="list-group-item">
                                    <div class="form-check">
                                        <input class="form-check-input item-checkbox" type="checkbox" value="@item.Id" id="item_@item.Id" name="SelectedItems">
                                        <label class="form-check-label" for="item_@item.Id">
                                            @item.MenuItemName (@item.Quantity)
                                            @if (!string.IsNullOrEmpty(item.CourseName))
                                            {
                                                <span class="ms-1 badge bg-secondary">@item.CourseName</span>
                                            }
                                        </label>
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Fire to Kitchen</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Handle FireAll checkbox
            $('#fireAll').change(function () {
                if ($(this).is(':checked')) {
                    $('#itemSelection').addClass('d-none');
                    $('.item-checkbox').prop('checked', false);
                } else {
                    $('#itemSelection').removeClass('d-none');
                }
            });
            
            // Handle item checkboxes
            $('.item-checkbox').change(function () {
                if ($('.item-checkbox:checked').length > 0) {
                    $('#fireAll').prop('checked', false);
                }
            });
            
            // Check if there are any new items
            var newItemsCount = @Model.Items.Count(i => i.Status == 0);
            if (newItemsCount === 0) {
                // No new items to fire
                $('.btn[data-bs-target="#fireItemsModal"]').addClass('disabled');
            }
        });
    </script>
}
