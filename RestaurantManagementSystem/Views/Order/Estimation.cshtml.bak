@{
    ViewData["Title"] = "Menu Items & Estimation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/estimation.css" asp-append-version="true" />
}

@section Scripts {
    <script src="~/js/estimation.js" asp-append-version="true"></script>
}

<div class="estimation-page">
    <!-- Page Header -->
    <div class="page-header">
        <h1><i class="fas fa-calculator me-2"></i>Menu Items & Estimation</h1>
        <p>Select items and quantities to generate a professional estimate</p>
    </div>

    <!-- Search and Filter Controls -->
    <div class="controls-section">
        <div class="row g-2">
            <div class="col-md-6">
                <input type="text" id="menuItemSearch" class="form-control form-control-sm" placeholder="🔍 Search menu items...">
            </div>
            <div class="col-md-3">
                <select id="categoryFilter" class="form-select form-select-sm">
                    <option value="all">All Categories</option>
                </select>
            </div>
            <div class="col-md-3">
                <button id="estimateBtn" class="btn btn-success btn-sm w-100">
                    <i class="fas fa-calculator me-1"></i>Generate Estimate
                </button>
            </div>
        </div>
    </div>

    <!-- Menu Items Section -->
    <div class="menu-section mb-4">
        <div class="menu-header">
            <h3><i class="fas fa-utensils me-2"></i>Menu Items</h3>
        </div>
        <div class="table-responsive">
            <table id="menuItemsTable" class="table table-hover table-compact mb-0">
                <thead>
                    <tr>
                        <th width="40%">Item Name</th>
                        <th width="15%">Price</th>
                        <th width="15%">Category</th>
                        <th width="15%">PLU Code</th>
                        <th width="15%">Quantity</th>
                    </tr>
                </thead>
                <tbody id="menuItemsTableBody">
                    <tr>
                        <td colspan="5" class="text-center py-4">
                            <div class="loading-spinner mx-auto"></div>
                            <div class="mt-2">Loading menu items...</div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Estimation Section -->
    <div class="estimation-section" style="display: none;">
        <div class="estimation-header">
            <h4><i class="fas fa-receipt me-2"></i>Order Estimation</h4>
            <div>
                <button id="clearEstimateBtn" class="btn btn-warning btn-sm me-2">
                    <i class="fas fa-eraser me-1"></i>Clear
                </button>
                <button id="printEstimateBtn" class="btn btn-primary btn-sm">
                    <i class="fas fa-print me-1"></i>Print
                </button>
            </div>
        </div>
        
        <div class="estimation-summary">
            <div class="table-responsive">
                <table class="table table-sm mb-0">
                    <thead>
                        <tr>
                            <th width="45%">Item</th>
                            <th width="20%" class="text-end">Unit Price</th>
                            <th width="15%" class="text-center">Qty</th>
                            <th width="20%" class="text-end">Amount</th>
                        </tr>
                    </thead>
                    <tbody id="estimationTableBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
        padding: 15px;
        border-bottom: 1px solid #dee2e6;
    }
    
    .menu-body {
        padding: 15px;
    }
    
    .estimation-section {
        background: #f8f9fa;
        border-radius: 8px;
        margin-top: 20px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }
    
    .estimation-header {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        padding: 15px;
        border-radius: 8px 8px 0 0;
    }
    
    .estimation-body {
        padding: 15px;
        background: white;
        border-radius: 0 0 8px 8px;
    }
    
    .btn-estimate {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        border: none;
        padding: 8px 20px;
        font-weight: 600;
        border-radius: 6px;
        font-size: 0.9rem;
        transition: all 0.2s ease;
    }
    
    .btn-estimate:hover {
        transform: translateY(-1px);
        box-shadow: 0 3px 8px rgba(40,167,69,0.3);
    }
    
    .btn-clear {
        background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
        border: none;
        padding: 6px 16px;
        font-weight: 600;
        border-radius: 6px;
        font-size: 0.85rem;
        transition: all 0.2s ease;
    }
    
    .btn-clear:hover {
        transform: translateY(-1px);
        box-shadow: 0 3px 8px rgba(255,193,7,0.3);
    }
    
    .btn-print {
        background: linear-gradient(135deg, #17a2b8 0%, #6f42c1 100%);
        border: none;
        padding: 6px 16px;
        font-weight: 600;
        border-radius: 6px;
        font-size: 0.85rem;
        transition: all 0.2s ease;
    }
    
    .btn-print:hover {
        transform: translateY(-1px);
        box-shadow: 0 3px 8px rgba(23,162,184,0.3);
    }
    
    .table {
        margin-bottom: 0;
        font-size: 0.9rem;
    }
    
    .table th {
        background: #f8f9fa;
        font-weight: 600;
        border-bottom: 2px solid #dee2e6;
        padding: 10px 8px;
        font-size: 0.85rem;
    }
    
    .table td {
        padding: 8px;
        vertical-align: middle;
    }
    
    .table tbody tr:hover {
        background: #f8f9fa;
        transition: all 0.2s ease;
    }
    
    .qty-input {
        border-radius: 4px;
        text-align: center;
        font-weight: 600;
        padding: 4px 8px;
        height: 32px;
        width: 60px;
        font-size: 0.85rem;
    }
    
    .qty-input:focus {
        border-color: #28a745;
        box-shadow: 0 0 0 0.15rem rgba(40,167,69,0.25);
    }
    
    .search-input {
        border-radius: 6px;
        padding: 8px 12px;
        border: 1px solid #ced4da;
        transition: all 0.2s ease;
        font-size: 0.9rem;
        height: 38px;
    }
    
    .search-input:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.15rem rgba(102,126,234,0.25);
    }
    
    .category-select {
        border-radius: 6px;
        padding: 8px 12px;
        border: 1px solid #ced4da;
        font-size: 0.9rem;
        height: 38px;
    }
    
    .empty-state {
        text-align: center;
        padding: 40px 20px;
        color: #6c757d;
    }
    
    .empty-state i {
        font-size: 3rem;
        margin-bottom: 15px;
        color: #dee2e6;
    }
    
    .loading-state {
        text-align: center;
        padding: 30px 20px;
        color: #6c757d;
    }
    
    .loading-spinner {
        display: inline-block;
        width: 1.5rem;
        height: 1.5rem;
        vertical-align: text-bottom;
        border: 0.2em solid currentColor;
        border-right-color: transparent;
        border-radius: 50%;
        animation: spinner-border 0.75s linear infinite;
    }
    
    @@keyframes spinner-border {
        to {
            transform: rotate(360deg);
        }
    }
    
    .stats-card {
        background: #f8f9fa;
        border-radius: 6px;
        padding: 12px;
        border: 1px solid #dee2e6;
        border-left: 3px solid #667eea;
    }
    
    .compact-row {
        margin-bottom: 0 !important;
    }
    
    .form-label {
        margin-bottom: 4px !important;
    }
    
    /* Responsive adjustments for mobile */
    @@media (max-width: 768px) {
        .estimation-page {
            padding: 10px;
        }
        
        .page-header {
            padding: 15px;
            margin-bottom: 15px;
        }
        
        .page-header h1 {
            font-size: 1.5rem;
        }
        
        .controls-section,
        .menu-body,
        .estimation-body {
            padding: 10px;
        }
    }
</style>

<div class="estimation-page">
    <!-- Page Header -->
    <div class="page-header">
        <h1><i class="fas fa-calculator me-2"></i>Menu Items & Estimation</h1>
        <p>Select items and quantities to generate professional order estimates</p>
    </div>

    <!-- Controls Section -->
    <div class="controls-section">
        <div class="row g-2 align-items-end">
            <div class="col-md-4">
                <label for="menuItemSearch" class="form-label fw-bold mb-1" style="font-size: 0.85rem;">Search Menu Items</label>
                <input type="text" id="menuItemSearch" class="form-control search-input" placeholder="Search items...">
            </div>
            <div class="col-md-3">
                <label for="categoryFilter" class="form-label fw-bold mb-1" style="font-size: 0.85rem;">Category</label>
                <select id="categoryFilter" class="form-control category-select">
                    <option value="all">All Categories</option>
                </select>
            </div>
            <div class="col-md-3">
                <button id="estimateBtn" class="btn btn-success btn-estimate w-100">
                    <i class="fas fa-calculator me-1"></i>Generate Estimate
                </button>
            </div>
            <div class="col-md-2">
                <div class="stats-card text-center">
                    <div class="fw-bold text-primary" id="totalItems" style="font-size: 1.2rem;">0</div>
                    <small class="text-muted">Items Selected</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Menu Items Section -->
    <div class="menu-section">
        <div class="menu-header">
            <h5 class="mb-0"><i class="fas fa-utensils me-2"></i>Available Menu Items</h5>
        </div>
        <div class="menu-body">
            <div class="table-responsive">
                <table id="menuItemsTable" class="table table-hover table-sm">
                    <thead>
                        <tr>
                            <th width="35%">Item Name</th>
                            <th width="15%">Price</th>
                            <th width="20%">Category</th>
                            <th width="15%">PLU Code</th>
                            <th width="15%">Quantity</th>
                        </tr>
                    </thead>
                    <tbody id="menuItemsTableBody">
                        <tr>
                            <td colspan="5" class="loading-state">
                                <div class="loading-spinner me-2"></div>
                                Loading menu items...
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Estimation Section -->
    <div class="estimation-section" style="display: none;">
        <div class="estimation-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="mb-0"><i class="fas fa-receipt me-2"></i>Order Estimation</h5>
                    <small class="opacity-75">Includes GST calculation</small>
                </div>
                <div>
                    <button type="button" id="clearEstimateBtn" class="btn btn-warning btn-clear me-2">
                        <i class="fas fa-eraser me-1"></i>Clear
                    </button>
                    <button type="button" id="printEstimateBtn" class="btn btn-info btn-print">
                        <i class="fas fa-print me-1"></i>Print
                    </button>
                </div>
            </div>
        </div>
        <div class="estimation-body">
            <div class="table-responsive">
                <table class="table table-striped table-sm" id="estimationTable">
                    <thead>
                        <tr>
                            <th width="35%">Item Description</th>
                            <th width="20%" class="text-end">Unit Price</th>
                            <th width="15%" class="text-center">Qty</th>
                            <th width="30%" class="text-end">Amount</th>
                        </tr>
                    </thead>
                    <tbody id="estimationTableBody">
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Load menu items on page load
            loadMenuItems();
            
            // Menu Items search functionality
            $('#menuItemSearch').on('keyup', function() {
                var searchText = $(this).val().toLowerCase();
                $('#menuItemsTable tbody tr').filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(searchText) > -1);
                });
                updateItemCount();
            });
            
            // Category filter functionality
            $('#categoryFilter').on('change', function() {
                var category = $(this).val().toLowerCase();
                if (category === 'all') {
                    $('#menuItemsTable tbody tr').show();
                } else {
                    $('#menuItemsTable tbody tr').filter(function() {
                        $(this).toggle($(this).find('td:eq(2)').text().toLowerCase() === category);
                    });
                }
                updateItemCount();
            });
            
            // Estimate button functionality
            $('#estimateBtn').on('click', function() {
                generateEstimate();
            });
            
            // Print estimate button functionality
            $('#printEstimateBtn').on('click', function() {
                printEstimate();
            });
            
            // Clear estimate button functionality
            $('#clearEstimateBtn').on('click', function() {
                clearEstimate();
            });
            
            // Watch for quantity input changes
            $(document).on('change', '.qty-input', function() {
                var value = parseInt($(this).val());
                if (isNaN(value) || value < 0) {
                    $(this).val(0);
                }
                updateItemCount();
            });
            
            function loadMenuItems() {
                // Show loading indicator
                $('#menuItemsTableBody').html('<tr><td colspan="5" class="loading-state"><div class="loading-spinner me-2"></div>Loading menu items...</td></tr>');
                
                // Fetch menu items from API
                $.ajax({
                    url: '/Menu/Index',
                    method: 'GET',
                    success: function(data) {
                        // Extract menu items from the response
                        var menuItems = $(data).find('.table tbody tr');
                        var tableBody = $('#menuItemsTableBody');
                        
                        if (menuItems.length > 0) {
                            tableBody.empty();
                            
                            // Process and add menu items to modal table
                            menuItems.each(function() {
                                var pluCode = $(this).find('td:eq(0)').text().trim();
                                var name = $(this).find('td:eq(2)').text().trim();
                                var category = $(this).find('td:eq(3)').text().trim();
                                var price = $(this).find('td:eq(4)').text().trim();
                                
                                // Extract numeric price value
                                var numericPrice = price.replace(/[^\d.]/g, ''); // Remove all non-numeric characters except decimal
                                
                                tableBody.append(`
                                    <tr data-price="${numericPrice}">
                                        <td class="fw-bold">${name}</td>
                                        <td class="text-primary fw-bold">${price}</td>
                                        <td><span class="badge bg-light text-dark">${category}</span></td>
                                        <td class="text-muted">${pluCode}</td>
                                        <td>
                                            <input type="number" class="form-control qty-input" min="0" value="0" step="1">
                                        </td>
                                    </tr>
                                `);
                                
                                // Add category to filter if not already present
                                if ($('#categoryFilter option[value="' + category.toLowerCase() + '"]').length === 0) {
                                    $('#categoryFilter').append(`<option value="${category.toLowerCase()}">${category}</option>`);
                                }
                            });
                            
                            updateItemCount();
                            showToast('Menu items loaded successfully!', 'success');
                        } else {
                            tableBody.html('<tr><td colspan="5" class="empty-state"><i class="fas fa-utensils"></i><br>No menu items found</td></tr>');
                        }
                    },
                    error: function() {
                        $('#menuItemsTableBody').html('<tr><td colspan="5" class="empty-state text-danger"><i class="fas fa-exclamation-triangle"></i><br>Error loading menu items</td></tr>');
                        showToast('Error loading menu items', 'error');
                    }
                });
            }
            
            // Function to generate estimate
            function generateEstimate() {
                var selectedItems = [];
                var total = 0;
                var hasSelectedItems = false;
                
                // Collect all items with quantity > 0
                $('#menuItemsTable tbody tr').each(function() {
                    var qtyInput = $(this).find('.qty-input');
                    var qty = parseInt(qtyInput.val());
                    
                    if (qty > 0) {
                        var name = $(this).find('td:eq(0)').text().trim();
                        var priceText = $(this).find('td:eq(1)').text().trim();
                        var dataPrice = $(this).data('price');
                        
                        // Use data-price attribute if available, otherwise parse the text
                        var price = parseFloat(dataPrice) || parseFloat(priceText.replace(/[^\d.]/g, ''));
                        
                        if (!isNaN(price) && price > 0) {
                            var subtotal = qty * price;
                            
                            selectedItems.push({
                                name: name,
                                price: price,
                                qty: qty,
                                subtotal: subtotal
                            });
                            
                            total += subtotal;
                            hasSelectedItems = true;
                        }
                    }
                });
                
                // Update estimation table
                var estimationBody = $('#estimationTableBody');
                estimationBody.empty();
                
                if (hasSelectedItems) {
                    selectedItems.forEach(function(item) {
                        estimationBody.append(`
                            <tr>
                                <td class="fw-bold">${item.name}</td>
                                <td class="text-end">₹${item.price.toFixed(2)}</td>
                                <td class="text-center">${item.qty}</td>
                                <td class="text-end fw-bold">₹${item.subtotal.toFixed(2)}</td>
                            </tr>
                        `);
                    });
                    
                    // Add tax calculation (assuming 5% GST)
                    var tax = total * 0.05;
                    var grandTotal = total + tax;
                    
                    // Add tax and total rows
                    estimationBody.append(`
                        <tr class="border-top">
                            <td colspan="3" class="text-end fw-bold">Subtotal:</td>
                            <td class="text-end fw-bold">₹${total.toFixed(2)}</td>
                        </tr>
                        <tr>
                            <td colspan="3" class="text-end">GST (5%):</td>
                            <td class="text-end">₹${tax.toFixed(2)}</td>
                        </tr>
                        <tr class="table-success">
                            <td colspan="3" class="text-end fw-bold fs-5">Grand Total:</td>
                            <td class="text-end fw-bold fs-5">₹${grandTotal.toFixed(2)}</td>
                        </tr>
                    `);
                    
                    // Show estimation section
                    $('.estimation-section').slideDown();
                    
                    // Scroll to estimation section
                    $('html, body').animate({
                        scrollTop: $('.estimation-section').offset().top - 100
                    }, 800);
                    
                    // Success message
                    showToast('Estimate generated successfully!', 'success');
                } else {
                    // No items selected
                    estimationBody.append(`
                        <tr>
                            <td colspan="4" class="empty-state">
                                <i class="fas fa-shopping-cart"></i><br>
                                Please select items and quantities to generate an estimate
                            </td>
                        </tr>
                    `);
                    $('.estimation-section').slideDown();
                    
                    // Warning message
                    showToast('Please select items and enter quantities to generate estimate', 'warning');
                }
            }
            
            // Function to print estimate
            function printEstimate() {
                var currentDate = new Date();
                var estimateNumber = 'EST-' + currentDate.getFullYear() + (currentDate.getMonth() + 1).toString().padStart(2, '0') + currentDate.getDate().toString().padStart(2, '0') + '-' + Math.floor(Math.random() * 1000);
                
                var printContents = `
                    <html>
                    <head>
                        <title>Order Estimate - ${estimateNumber}</title>
                        <style>
                            body { 
                                font-family: Arial, sans-serif; 
                                margin: 20px;
                                line-height: 1.4;
                            }
                            .header { 
                                text-align: center; 
                                margin-bottom: 30px;
                                border-bottom: 2px solid #007bff;
                                padding-bottom: 15px;
                            }
                            .company-name {
                                font-size: 24px;
                                font-weight: bold;
                                color: #007bff;
                                margin-bottom: 5px;
                            }
                            .estimate-title {
                                font-size: 18px;
                                color: #333;
                                margin-bottom: 10px;
                            }
                            .estimate-info {
                                display: flex;
                                justify-content: space-between;
                                margin-bottom: 20px;
                                font-size: 14px;
                            }
                            table { 
                                width: 100%; 
                                border-collapse: collapse;
                                margin-bottom: 20px;
                            }
                            th, td { 
                                border: 1px solid #ddd; 
                                padding: 12px 8px; 
                                text-align: left; 
                            }
                            th { 
                                background-color: #f8f9fa;
                                font-weight: bold;
                                color: #333;
                            }
                            .text-right { text-align: right; }
                            .text-center { text-align: center; }
                            .total-row { 
                                background-color: #e8f5e8;
                                font-weight: bold;
                            }
                            .footer { 
                                margin-top: 30px; 
                                text-align: center; 
                                font-style: italic;
                                color: #666;
                                border-top: 1px solid #ddd;
                                padding-top: 15px;
                            }
                            .terms {
                                margin-top: 20px;
                                font-size: 12px;
                                color: #666;
                            }
                        </style>
                    </head>
                    <body>
                        <div class="header">
                            <div class="company-name">Restaurant Management System</div>
                            <div class="estimate-title">ORDER ESTIMATE</div>
                        </div>
                        
                        <div class="estimate-info">
                            <div>
                                <strong>Estimate #:</strong> ${estimateNumber}<br>
                                <strong>Date:</strong> ${currentDate.toLocaleDateString('en-IN')}<br>
                                <strong>Time:</strong> ${currentDate.toLocaleTimeString('en-IN')}
                            </div>
                            <div>
                                <strong>Valid Until:</strong> ${new Date(currentDate.getTime() + 7*24*60*60*1000).toLocaleDateString('en-IN')}<br>
                                <strong>Prepared By:</strong> System User
                            </div>
                        </div>
                        
                        <table>
                            <thead>
                                <tr>
                                    <th style="width: 50%;">Item Description</th>
                                    <th style="width: 15%;" class="text-right">Unit Price</th>
                                    <th style="width: 10%;" class="text-center">Qty</th>
                                    <th style="width: 15%;" class="text-right">Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                `;
                
                // Add all rows from the estimation table
                $('#estimationTableBody tr').each(function() {
                    if ($(this).find('td').length === 4) {
                        var cells = $(this).find('td');
                        var isTotal = $(this).hasClass('table-success') || $(this).find('td:first').text().includes('Grand Total');
                        var rowClass = isTotal ? 'total-row' : '';
                        
                        printContents += `<tr class="${rowClass}">`;
                        cells.each(function(index) {
                            var cellClass = '';
                            if (index === 1 || index === 3) cellClass = 'text-right';
                            if (index === 2) cellClass = 'text-center';
                            
                            printContents += `<td class="${cellClass}">${$(this).text()}</td>`;
                        });
                        printContents += '</tr>';
                    }
                });
                
                printContents += `
                            </tbody>
                        </table>
                        
                        <div class="terms">
                            <strong>Terms & Conditions:</strong><br>
                            1. This is an estimate only. Final prices may vary.<br>
                            2. Prices are subject to change without notice.<br>
                            3. All prices include applicable taxes.<br>
                            4. This estimate is valid for 7 days from the date of issue.
                        </div>
                        
                        <div class="footer">
                            <p><strong>Thank you for choosing our restaurant!</strong></p>
                            <p>For any queries, please contact our management team.</p>
                        </div>
                    </body>
                    </html>
                `;
                
                // Create a new window for printing
                var printWindow = window.open('', '_blank', 'width=800,height=600');
                printWindow.document.write(printContents);
                printWindow.document.close();
                printWindow.focus();
                
                // Print after a short delay to ensure content is loaded
                setTimeout(function() {
                    printWindow.print();
                }, 500);
                
                showToast('Estimate prepared for printing', 'success');
            }
            
            // Function to clear estimate
            function clearEstimate() {
                // Reset all quantity inputs to 0
                $('.qty-input').val(0);
                
                // Clear estimation table
                $('#estimationTableBody').empty();
                
                // Hide estimation section
                $('.estimation-section').slideUp();
                
                updateItemCount();
                showToast('Estimate cleared successfully', 'info');
            }
            
            // Function to update item count
            function updateItemCount() {
                var count = 0;
                $('.qty-input').each(function() {
                    var qty = parseInt($(this).val()) || 0;
                    if (qty > 0) {
                        count++;
                    }
                });
                $('#totalItems').text(count);
            }
            
            // Toast notification function
            function showToast(message, type = 'info') {
                // Remove existing toasts
                $('.toast-notification').remove();
                
                var bgClass = 'bg-info';
                var icon = 'fa-info-circle';
                
                switch(type) {
                    case 'success':
                        bgClass = 'bg-success';
                        icon = 'fa-check-circle';
                        break;
                    case 'warning':
                        bgClass = 'bg-warning';
                        icon = 'fa-exclamation-triangle';
                        break;
                    case 'error':
                        bgClass = 'bg-danger';
                        icon = 'fa-times-circle';
                        break;
                }
                
                var toast = $(`
                    <div class="toast-notification position-fixed top-0 end-0 m-3 ${bgClass} text-white p-3 rounded shadow" style="z-index: 9999;">
                        <i class="fas ${icon} me-2"></i>${message}
                    </div>
                `);
                
                $('body').append(toast);
                
                // Auto-hide after 3 seconds
                setTimeout(function() {
                    toast.fadeOut(300, function() {
                        $(this).remove();
                    });
                }, 3000);
            }
        });
    </script>
}