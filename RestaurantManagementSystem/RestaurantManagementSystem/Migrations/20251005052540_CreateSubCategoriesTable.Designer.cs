// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantManagementSystem.Data;

#nullable disable

namespace RestaurantManagementSystem.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20251005052540_CreateSubCategoriesTable")]
    partial class CreateSubCategoriesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RestaurantManagementSystem.Models.Allergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("IconPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Allergens");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Appetizers"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Main Course"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Beverages"
                        });
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Ingredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IngredientsName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TMT",
                            DisplayName = "Tomato",
                            IngredientsName = "Tomato"
                        },
                        new
                        {
                            Id = 2,
                            Code = "CHS",
                            DisplayName = "Cheese",
                            IngredientsName = "Cheese"
                        },
                        new
                        {
                            Id = 3,
                            Code = "CHK",
                            DisplayName = "Chicken",
                            IngredientsName = "Chicken"
                        },
                        new
                        {
                            Id = 4,
                            Code = "BSL",
                            DisplayName = "Basil",
                            IngredientsName = "Basil"
                        });
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CalorieCount")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GSTPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGstApplicable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpecial")
                        .HasColumnType("bit");

                    b.Property<string>("ItemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KitchenStationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("NotAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("PLUCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreparationTimeMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TargetGP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.MenuItemAllergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AllergenId")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("SeverityLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AllergenId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuItemAllergens");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.MenuItemIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Instructions")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("bit");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MenuItemId");

                    b.ToTable("MenuItemIngredients");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.MenuItemModifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxAllowed")
                        .HasColumnType("int");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<int>("ModifierId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceAdjustment")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.HasIndex("ModifierId");

                    b.ToTable("MenuItemModifiers");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Modifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifierType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Modifiers");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CookingInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CookingTimeMinutes")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuItemId")
                        .HasColumnType("int");

                    b.Property<string>("MenuItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlatingInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparationInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreparationTimeMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("Yield")
                        .HasColumnType("int");

                    b.Property<decimal>("YieldPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItemId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.RecipeStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("SpecialEquipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TimeRequiredMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Tips")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeSteps");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("NoShow")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PartySize")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("ReminderSent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReservationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialRequests")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TableId")
                        .HasColumnType("int");

                    b.Property<string>("TableNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(9270),
                            CustomerName = "John Smith",
                            FullName = "John Smith",
                            GuestName = "John Smith",
                            NoShow = false,
                            PartySize = 4,
                            PhoneNumber = "555-1234",
                            ReminderSent = false,
                            ReservationDate = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            ReservationTime = new DateTime(2025, 10, 5, 19, 0, 0, 0, DateTimeKind.Local),
                            Status = 1,
                            TableId = 4,
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(9270)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 332, DateTimeKind.Local).AddTicks(20),
                            CustomerName = "Mary Johnson",
                            FullName = "Mary Johnson",
                            GuestName = "Mary Johnson",
                            NoShow = false,
                            PartySize = 2,
                            PhoneNumber = "555-5678",
                            ReminderSent = false,
                            ReservationDate = new DateTime(2025, 10, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            ReservationTime = new DateTime(2025, 10, 6, 18, 30, 0, 0, DateTimeKind.Local),
                            Status = 0,
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 332, DateTimeKind.Local).AddTicks(20)
                        });
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.RestaurantSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("DefaultGSTPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GSTCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LogoPath")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("TakeAwayGSTPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RestaurantSettings");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsSystemRole")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Description");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int")
                        .HasColumnName("DisplayOrder");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7260),
                            Description = "Warm appetizer dishes",
                            DisplayOrder = 1,
                            IsActive = true,
                            Name = "Hot Appetizers",
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7370)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7480),
                            Description = "Cold appetizer dishes",
                            DisplayOrder = 2,
                            IsActive = true,
                            Name = "Cold Appetizers",
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7480)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7480),
                            Description = "Meat-based main courses",
                            DisplayOrder = 1,
                            IsActive = true,
                            Name = "Meat Dishes",
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7480)
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7480),
                            Description = "Vegetarian main courses",
                            DisplayOrder = 2,
                            IsActive = true,
                            Name = "Vegetarian Dishes",
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7480)
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7490),
                            Description = "Various types of cakes",
                            DisplayOrder = 1,
                            IsActive = true,
                            Name = "Cakes",
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7490)
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7490),
                            Description = "Ice cream desserts",
                            DisplayOrder = 2,
                            IsActive = true,
                            Name = "Ice Cream",
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7490)
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7490),
                            Description = "Coffee, tea, hot chocolate",
                            DisplayOrder = 1,
                            IsActive = true,
                            Name = "Hot Beverages",
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7490)
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7500),
                            Description = "Juices, sodas, iced drinks",
                            DisplayOrder = 2,
                            IsActive = true,
                            Name = "Cold Beverages",
                            UpdatedAt = new DateTime(2025, 10, 5, 10, 55, 40, 331, DateTimeKind.Local).AddTicks(7500)
                        });
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPartOfMergedOrder")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastOccupiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MergedTableNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinPartySize")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 4,
                            IsActive = true,
                            IsAvailable = true,
                            IsPartOfMergedOrder = false,
                            MinPartySize = 1,
                            Status = 0,
                            TableName = "T1",
                            TableNumber = "T1"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 2,
                            IsActive = true,
                            IsAvailable = true,
                            IsPartOfMergedOrder = false,
                            MinPartySize = 1,
                            Status = 2,
                            TableName = "T2",
                            TableNumber = "T2"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 6,
                            IsActive = true,
                            IsAvailable = true,
                            IsPartOfMergedOrder = false,
                            MinPartySize = 1,
                            Status = 0,
                            TableName = "T3",
                            TableNumber = "T3"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 8,
                            IsActive = true,
                            IsAvailable = true,
                            IsPartOfMergedOrder = false,
                            MinPartySize = 1,
                            Status = 1,
                            TableName = "T4",
                            TableNumber = "T4"
                        });
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLockedOut")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("RequiresMFA")
                        .HasColumnType("bit");

                    b.Property<string>("Salt")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.PrimitiveCollection<string>("SelectedRoleIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.UserRoleAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.MenuItem", b =>
                {
                    b.HasOne("RestaurantManagementSystem.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.MenuItemAllergen", b =>
                {
                    b.HasOne("RestaurantManagementSystem.Models.Allergen", "Allergen")
                        .WithMany()
                        .HasForeignKey("AllergenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantManagementSystem.Models.MenuItem", "MenuItem")
                        .WithMany("Allergens")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergen");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.MenuItemIngredient", b =>
                {
                    b.HasOne("RestaurantManagementSystem.Models.Ingredients", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantManagementSystem.Models.MenuItem", "MenuItem")
                        .WithMany("Ingredients")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.MenuItemModifier", b =>
                {
                    b.HasOne("RestaurantManagementSystem.Models.MenuItem", "MenuItem")
                        .WithMany("Modifiers")
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantManagementSystem.Models.Modifier", "Modifier")
                        .WithMany()
                        .HasForeignKey("ModifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");

                    b.Navigation("Modifier");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Recipe", b =>
                {
                    b.HasOne("RestaurantManagementSystem.Models.MenuItem", "MenuItem")
                        .WithMany()
                        .HasForeignKey("MenuItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.RecipeStep", b =>
                {
                    b.HasOne("RestaurantManagementSystem.Models.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.SubCategory", b =>
                {
                    b.HasOne("RestaurantManagementSystem.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.UserRoleAssignment", b =>
                {
                    b.HasOne("RestaurantManagementSystem.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RestaurantManagementSystem.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.MenuItem", b =>
                {
                    b.Navigation("Allergens");

                    b.Navigation("Ingredients");

                    b.Navigation("Modifiers");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Recipe", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("RestaurantManagementSystem.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
