@model TableServiceDashboardViewModel
@{
    ViewData["Title"] = "Table Service Dashboard";
}

<div class="container-fluid p-3">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1>@ViewData["Title"]</h1>
        <div>
            <a asp-action="SeatGuest" class="btn btn-primary">
                <i class="fas fa-chair"></i> Seat New Guest
            </a>
            <a asp-action="ActiveTables" class="btn btn-outline-primary ms-2">
                <i class="fas fa-list"></i> View All Active Tables
            </a>
            <a asp-action="CleanupStaleTurnovers" class="btn btn-outline-warning ms-2" 
               onclick="return confirm('This will clean up old table turnovers and reset available tables. Continue?')">
                <i class="fas fa-broom"></i> Cleanup Stale Tables
            </a>
            <a asp-action="ForceResetAllTables" class="btn btn-outline-danger ms-2" 
               onclick="return confirm('This will FORCE RESET all tables to available and clear all turnovers. Are you sure?')">
                <i class="fas fa-power-off"></i> Force Reset All Tables
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <h5 class="card-title">Available Tables</h5>
                    <h2 class="display-4">@Model.AvailableTables</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <h5 class="card-title">Occupied Tables</h5>
                    <h2 class="display-4">@Model.OccupiedTables</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-dark">
                <div class="card-body">
                    <h5 class="card-title">Dirty Tables</h5>
                    <h2 class="display-4">@Model.DirtyTables</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <h5 class="card-title">Waitlist / Reservations Today</h5>
                    <h2 class="display-4">@Model.WaitlistCount / @Model.ReservationCount</h2>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Available Tables Section -->
        <div class="col-lg-12 mt-4">
            <div class="card shadow-sm">
                <div class="card-header bg-gradient bg-success text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0 fw-bold">
                        <i class="fas fa-chair me-2"></i>Available Tables
                    </h5>
                    <small class="text-light">Click on a table to create an order</small>
                </div>
                <div class="card-body p-4">
                    @if (Model.UnoccupiedTables.Any())
                    {
                        <div class="row g-2">
                            @foreach (var table in Model.UnoccupiedTables)
                            {
                                <div class="col-xxl-2 col-xl-2 col-lg-3 col-md-4 col-sm-6 col-6">
                                    <div class="card table-card border-0 shadow-lg position-relative" style="background: linear-gradient(145deg, #f8f9fa 0%, #e9ecef 100%); border: 2px solid #28a745; transition: all 0.3s ease; aspect-ratio: 1; height: 160px; width: 100%; border-radius: 15px; box-shadow: 0 4px 15px rgba(0,0,0,0.1);">
                                        <div class="card-body text-center p-3 d-flex flex-column justify-content-center align-items-center h-100" style="color: #2c3e50; position: relative; z-index: 2;">
                                            <div class="d-flex flex-column align-items-center justify-content-center h-100">
                                                <div class="table-icon mb-2" style="color: #198754;">
                                                    <i class="fas fa-utensils fa-2x" style="filter: drop-shadow(0 2px 4px rgba(0,0,0,0.1));"></i>
                                                </div>
                                                <h3 class="card-title fw-bold mb-2 text-center" style="color: #1a1a1a; font-size: 1.6rem; text-shadow: 0 1px 3px rgba(0,0,0,0.2); font-family: 'Arial Black', Arial, sans-serif;">@table.TableName</h3>
                                                <p class="card-text mb-2" style="font-size: 0.95rem; color: #495057; font-weight: 700;">
                                                    <i class="fas fa-users me-1" style="color: #198754;"></i>@table.Capacity seats
                                                </p>
                                                <span class="badge text-white fw-bold px-3 py-2 mb-2" style="font-size: 0.8rem; border-radius: 20px; background: linear-gradient(135deg, #198754 0%, #20c997 100%); box-shadow: 0 3px 10px rgba(25,135,84,0.4); border: 1px solid rgba(255,255,255,0.2);">
                                                    <i class="fas fa-check-circle me-1"></i>AVAILABLE
                                                </span>
                                                <a href="@Url.Action("Create", "Order", new { tableId = table.Id })" 
                                                   class="btn fw-bold text-white create-order-btn" style="background: linear-gradient(135deg, #198754 0%, #20c997 100%); font-size: 0.9rem; padding: 0.6rem 1.4rem; border-radius: 20px; border: none; width: 95%; box-shadow: 0 4px 15px rgba(25,135,84,0.4); text-transform: uppercase; letter-spacing: 0.8px; font-weight: 800;">
                                                    <i class="fas fa-plus me-1"></i> Create Order
                                                </a>
                                            </div>
                                        </div>
                                        <div class="position-absolute top-0 end-0 m-2">
                                            <div class="rounded-circle d-flex align-items-center justify-content-center" style="width: 28px; height: 28px; background: linear-gradient(135deg, #198754 0%, #20c997 100%); box-shadow: 0 3px 12px rgba(25,135,84,0.5); border: 2px solid rgba(255,255,255,0.9);">
                                                <i class="fas fa-check text-white" style="font-size: 0.9rem; font-weight: bold;"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="mb-3">
                                <i class="fas fa-chair fa-4x text-muted opacity-50"></i>
                            </div>
                            <h5 class="text-muted">No Available Tables</h5>
                            <p class="text-muted mb-0">All tables are currently occupied or being cleaned.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <style>
        .table-card {
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border-radius: 15px !important;
            overflow: hidden;
        }
        
        .table-card:hover {
            transform: translateY(-12px) scale(1.08);
            box-shadow: 0 25px 50px rgba(25,135,84,0.3) !important;
            border-color: #20c997 !important;
        }
        
        .table-card:hover::after {
            background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
        }
        
        .table-card:hover .create-order-btn {
            background: linear-gradient(135deg, #20c997 0%, #0dcaf0 100%) !important;
            color: #fff !important;
            transform: scale(1.12);
            box-shadow: 0 8px 25px rgba(32,201,151,0.5) !important;
        }
        
        .table-card:hover .table-icon {
            animation: pulse 0.8s ease-in-out;
            color: #0dcaf0 !important;
            filter: drop-shadow(0 3px 6px rgba(0,0,0,0.2));
        }
        
        .table-card:hover .card-title {
            color: #0dcaf0 !important;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }
        
        @@keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.2); }
        }
        
        @@keyframes bounce {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-5px); }
        }
        
        .card-header.bg-gradient {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%) !important;
        }
        
        .create-order-btn {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            border: none !important;
            font-weight: 700 !important;
            letter-spacing: 0.8px;
        }
        
        .table-card .badge {
            transition: all 0.3s ease;
        }
        
        .table-card:hover .badge {
            transform: scale(1.1);
        }
        
        .table-card .card-title {
            text-shadow: 0 1px 3px rgba(0,0,0,0.1);
            letter-spacing: 1.5px;
            transition: all 0.3s ease;
        }
        
        .table-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(145deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.1) 100%);
            pointer-events: none;
            border-radius: 15px;
            z-index: 1;
        }
        
        .table-card::after {
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            right: 2px;
            bottom: 2px;
            background: linear-gradient(145deg, #f1f3f4 0%, #e8eaed 100%);
            border-radius: 13px;
            z-index: 0;
            box-shadow: inset 0 2px 10px rgba(0,0,0,0.05);
        }
        
        .row.g-2 {
            gap: 15px !important;
        }
        
        .table-card {
            background-image: 
                radial-gradient(circle at 20% 20%, rgba(255,255,255,0.3) 1px, transparent 1px),
                radial-gradient(circle at 80% 80%, rgba(255,255,255,0.3) 1px, transparent 1px);
            background-size: 20px 20px;
        }
        
        @@keyframes ripple {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }
    </style>
    
    <script>
        $(document).ready(function () {
            // Auto-refresh the page every 2 minutes
            setTimeout(function() {
                location.reload();
            }, 120000);
            
            // Add click event to table cards for better UX
            $('.table-card').click(function(e) {
                if (!$(e.target).hasClass('create-order-btn') && !$(e.target).closest('.create-order-btn').length) {
                    $(this).find('.create-order-btn')[0].click();
                }
            });
            
            // Add ripple effect on card click
            $('.table-card').on('click', function(e) {
                var $this = $(this);
                var $ripple = $('<div class="ripple"></div>');
                var size = Math.max($this.outerWidth(), $this.outerHeight());
                var x = e.pageX - $this.offset().left - size / 2;
                var y = e.pageY - $this.offset().top - size / 2;
                
                $ripple.css({
                    width: size,
                    height: size,
                    top: y,
                    left: x,
                    background: 'rgba(255,255,255,0.3)',
                    borderRadius: '50%',
                    position: 'absolute',
                    transform: 'scale(0)',
                    animation: 'ripple 0.6s linear',
                    pointerEvents: 'none'
                });
                
                $this.append($ripple);
                
                setTimeout(function() {
                    $ripple.remove();
                }, 600);
            });
        });
    </script>
}
