@model IEnumerable<RestaurantManagementSystem.Models.WaitlistEntry>
@{
    ViewData["Title"] = "Waitlist Management";
}

<div class="container-fluid p-2">
    <style>
        /* Ensure dropdown menus inside the responsive table are visible and above other elements */
        .table-responsive { overflow: visible; }
        .table-responsive .dropdown-menu { z-index: 2050; }
        /* Slightly increase button hit area and make icons vertically centered */
        .btn-xs { padding: .15rem .4rem; font-size: .8rem; }
        .fw-medium { font-weight: 600; }
    </style>
    <div class="d-flex justify-content-between align-items-center mb-2">
        <div>
            <h5 class="mb-0 fw-bold">Waitlist Management</h5>
            <div class="text-muted small">Manage guest waiting list</div>
        </div>
        <div>
            <a asp-action="Dashboard" class="btn btn-sm btn-outline-secondary me-1">
                <i class="bi bi-speedometer"></i> Dashboard
            </a>
            <a asp-action="AddToWaitlist" class="btn btn-sm btn-primary">
                <i class="bi bi-plus-circle"></i> Add Guest
            </a>
        </div>
    </div>

    @if (TempData["ResultMessage"] != null)
    {
        <div class="alert alert-info py-1 px-2 mb-2 small">@TempData["ResultMessage"]</div>
    }
    
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger py-1 px-2 mb-2 small">@TempData["ErrorMessage"]</div>
    }
    
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger py-1 px-2 mb-2 small">@ViewBag.ErrorMessage</div>
    }

    <div class="row g-2">
        <div class="col-md-9">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-bottom py-2 px-3 d-flex justify-content-between align-items-center">
                    <h6 class="mb-0 fw-bold text-warning">
                        <i class="bi bi-list-ul me-1"></i> Current Waitlist
                    </h6>
                    <span class="badge bg-warning rounded-pill">@Model.Count() guests</span>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-sm table-hover mb-0" id="waitlistTable">
                            <thead class="table-light">
                                <tr>
                                    <th class="px-2 py-1 text-center">#</th>
                                    <th class="px-2 py-1">Guest</th>
                                    <th class="px-2 py-1">Phone</th>
                                    <th class="px-2 py-1 text-center">Size</th>
                                    <th class="px-2 py-1">Added</th>
                                    <th class="px-2 py-1">Wait Time</th>
                                    <th class="px-2 py-1">Status</th>
                                    <th class="px-2 py-1 text-center">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int position = 1;
                                }
                                @foreach (var entry in Model)
                                {
                                    <tr class="@(entry.IsWaitTimeExceeded ? "table-danger" : (entry.Status == WaitlistStatus.Notified ? "table-warning" : ""))">
                                        <td class="px-2 py-1 text-center">@(position++)</td>
                                        <td class="px-2 py-1 fw-medium">@entry.GuestName</td>
                                        <td class="px-2 py-1 small">@entry.PhoneNumber</td>
                                        <td class="px-2 py-1 text-center">@entry.PartySize</td>
                                        <td class="px-2 py-1 small">@entry.AddedAt.ToString("h:mm tt")</td>
                                        <td class="px-2 py-1">
                                            <span class="@(entry.ElapsedWaitTime > entry.QuotedWaitTime ? "text-danger fw-bold" : "small")">
                                                @entry.ElapsedWaitTime min
                                            </span> 
                                            <span class="small text-muted">/ @entry.QuotedWaitTime min</span>
                                        </td>
                                        <td class="px-2 py-1">
                                            <span class="badge @GetStatusBadgeClass(entry.Status)">@entry.Status</span>
                                        </td>
                                        <td class="px-2 py-1 text-center">
                                            <div class="dropdown">
                                                <button class="btn btn-xs btn-outline-secondary dropdown-toggle px-1 py-0" type="button" data-bs-toggle="dropdown" data-bs-boundary="viewport">
                                                    <i class="bi bi-three-dots"></i>
                                                </button>
                                                <ul class="dropdown-menu dropdown-menu-end">
                                                    @if (entry.Status == WaitlistStatus.Waiting)
                                                    {
                                                        <li>
                                                            <form asp-action="UpdateWaitlistStatus" method="post" class="m-0">
                                                                <input type="hidden" name="id" value="@entry.Id" />
                                                                <input type="hidden" name="status" value="@((int)WaitlistStatus.Notified)" />
                                                                <button type="submit" class="dropdown-item py-1"><i class="bi bi-bell me-2"></i>Notify</button>
                                                            </form>
                                                        </li>
                                                    }
                                                    
                                                    <li>
                                                        <button type="button" class="dropdown-item py-1" data-bs-toggle="modal" data-bs-target="#assignTableModal" onclick="setWaitlistId(@entry.Id)">
                                                            <i class="bi bi-grid me-2"></i>Assign Table
                                                        </button>
                                                    </li>

                                                    <li>
                                                        <form asp-action="UpdateWaitlistStatus" method="post" class="m-0">
                                                            <input type="hidden" name="id" value="@entry.Id" />
                                                            <input type="hidden" name="status" value="@((int)WaitlistStatus.Left)" />
                                                            <button type="submit" class="dropdown-item py-1"><i class="bi bi-box-arrow-right me-2"></i>Left</button>
                                                        </form>
                                                    </li>
                                                    
                                                    <li>
                                                        <form asp-action="UpdateWaitlistStatus" method="post" class="m-0">
                                                            <input type="hidden" name="id" value="@entry.Id" />
                                                            <input type="hidden" name="status" value="@((int)WaitlistStatus.NoResponse)" />
                                                            <button type="submit" class="dropdown-item py-1"><i class="bi bi-x-circle me-2"></i>No Response</button>
                                                        </form>
                                                    </li>
                                                    
                                                    <li><hr class="dropdown-divider my-1"></li>
                                                    
                                                    <li>
                                                        <form asp-action="RemoveFromWaitlist" method="post" class="m-0">
                                                            <input type="hidden" name="id" value="@entry.Id" />
                                                            <button type="submit" class="dropdown-item py-1 text-danger"><i class="bi bi-trash me-2"></i>Remove</button>
                                                        </form>
                                                    </li>
                                                </ul>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                @if (!Model.Any())
                                {
                                    <tr>
                                        <td class="text-center py-3 align-middle">
                                            <i class="bi bi-list-ul text-muted" style="font-size: 2rem;"></i>
                                            <p class="mb-0 text-muted">Waitlist is currently empty</p>
                                        </td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="col-md-3">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-white border-bottom py-2 px-3 d-flex justify-content-between align-items-center">
                    <h6 class="mb-0 fw-bold text-success">
                        <i class="bi bi-grid-3x3 me-1"></i> Available Tables
                    </h6>
                    <span class="badge bg-success rounded-pill">
                        @(ViewBag.AvailableTables != null ? ((List<Table>)ViewBag.AvailableTables).Count : 0)
                    </span>
                </div>
                <div class="card-body p-2">
                    <div class="list-group list-group-flush">
                        @if (ViewBag.AvailableTables != null && ((List<Table>)ViewBag.AvailableTables).Any())
                        {
                            foreach (var table in ViewBag.AvailableTables)
                            {
                                <div class="list-group-item border-0 px-2 py-1 d-flex justify-content-between align-items-center">
                                    <div>
                                        <div class="fw-medium">Table @table.TableNumber</div>
                                        <div class="small text-muted">@table.Capacity seats</div>
                                        @if (!string.IsNullOrEmpty(table.Section))
                                        {
                                            <div class="small text-muted">@table.Section</div>
                                        }
                                    </div>
                                    <button class="btn btn-xs btn-outline-success px-1 py-0" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#assignTableModal" 
                                            onclick="setPreselectedTable(@table.Id)">
                                        <i class="bi bi-plus"></i>
                                    </button>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center py-3">
                                <i class="bi bi-slash-circle text-muted" style="font-size: 2rem;"></i>
                                <p class="mb-0 text-muted">No tables available</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Assign Table Modal -->
    <div class="modal fade" id="assignTableModal" tabindex="-1" aria-labelledby="assignTableModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-sm modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <div class="modal-header bg-light py-2">
                    <h6 class="modal-title fw-bold" id="assignTableModalLabel">
                        <i class="bi bi-grid me-1"></i> Assign Table
                    </h6>
                    <button type="button" class="btn-close btn-sm" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body p-3">
                    <form asp-action="AssignTableToWaitlist" method="post" id="assignTableForm">
                        <input type="hidden" name="waitlistId" id="waitlistIdInput" />
                        <div class="mb-2">
                            <label for="tableId" class="form-label small fw-bold">Select Table</label>
                            <select name="tableId" id="tableId" class="form-select form-select-sm" required>
                                <option value="">-- Select a Table --</option>
                                @if (ViewBag.AvailableTables != null)
                                {
                                    foreach (var table in ViewBag.AvailableTables)
                                    {
                                        <option value="@table.Id">Table @table.TableNumber (Seats @table.Capacity)</option>
                                    }
                                }
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer py-1">
                    <button type="button" class="btn btn-sm btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" form="assignTableForm" class="btn btn-sm btn-success">
                        <i class="bi bi-check2"></i> Assign
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function setWaitlistId(id) {
            document.getElementById('waitlistIdInput').value = id;
        }
        
        function setPreselectedTable(tableId) {
            document.getElementById('tableId').value = tableId;
        }
        
        $(document).ready(function () {
            $('#waitlistTable').DataTable({
                "paging": false,
                "ordering": true,
                "info": false,
                "searching": true,
                "autoWidth": false,
                "language": {
                    "search": "_INPUT_",
                    "searchPlaceholder": "Search waitlist..."
                },
                "dom": '<"small"f>rt<"small"p>'
            });
            $('.dataTables_filter input').addClass('form-control form-control-sm');
            $('.dataTables_filter').addClass('pt-1 pb-2');
        });
    </script>
}

@functions {
    string GetStatusBadgeClass(WaitlistStatus status)
    {
        return status switch
        {
            WaitlistStatus.Waiting => "bg-secondary",
            WaitlistStatus.Notified => "bg-warning text-dark",
            WaitlistStatus.Seated => "bg-success",
            WaitlistStatus.Left => "bg-danger",
            WaitlistStatus.NoResponse => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
