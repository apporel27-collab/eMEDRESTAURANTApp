@model RestaurantManagementSystem.Models.SubCategory
@{
    ViewData["Title"] = "Delete Sub Category";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-trash-alt text-danger me-2"></i>
                        Delete Sub Category
                    </h2>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                            <li class="breadcrumb-item"><a asp-controller="Category" asp-action="Index">Categories</a></li>
                            <li class="breadcrumb-item"><a asp-controller="SubCategory" asp-action="Index">Sub Categories</a></li>
                            <li class="breadcrumb-item active" aria-current="page">Delete</li>
                        </ol>
                    </nav>
                </div>
                <div>
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>
                        Back to List
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-lg-8 col-md-10">
            <!-- Warning Alert -->
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <div class="d-flex align-items-center">
                    <div class="me-3">
                        <i class="fas fa-exclamation-triangle fa-2x"></i>
                    </div>
                    <div class="flex-grow-1">
                        <h5 class="alert-heading mb-2">⚠️ Permanent Deletion Warning</h5>
                        <p class="mb-1">You are about to permanently delete this sub category. This action cannot be undone!</p>
                        <small>Please review the information below carefully before proceeding.</small>
                    </div>
                </div>
            </div>

            <!-- Sub Category Information Card -->
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-info-circle me-2"></i>
                        Sub Category Details
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="info-group mb-3">
                                <label class="info-label">Sub Category Name:</label>
                                <div class="info-value fw-semibold">@Model.Name</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="info-group mb-3">
                                <label class="info-label">Parent Category:</label>
                                <div class="info-value">
                                    <span class="badge bg-primary">@Model.Category?.Name</span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="info-group mb-3">
                                <label class="info-label">Display Order:</label>
                                <div class="info-value">
                                    <span class="badge bg-secondary">@Model.DisplayOrder</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="info-group mb-3">
                                <label class="info-label">Status:</label>
                                <div class="info-value">
                                    <span class="badge @(Model.IsActive ? "bg-success" : "bg-warning text-dark")">
                                        <i class="fas @(Model.IsActive ? "fa-check" : "fa-times") me-1"></i>
                                        @(Model.IsActive ? "Active" : "Inactive")
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="row">
                            <div class="col-12">
                                <div class="info-group mb-3">
                                    <label class="info-label">Description:</label>
                                    <div class="info-value">@Model.Description</div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="row">
                        <div class="col-md-6">
                            <div class="info-group mb-3">
                                <label class="info-label">Created Date:</label>
                                <div class="info-value text-muted small">
                                    @Model.CreatedAt.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                                </div>
                            </div>
                        </div>
                        @if (Model.UpdatedAt.HasValue)
                        {
                            <div class="col-md-6">
                                <div class="info-group mb-3">
                                    <label class="info-label">Last Updated:</label>
                                    <div class="info-value text-muted small">
                                        @Model.UpdatedAt.Value.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Impact Assessment Card -->
            <div class="card shadow-sm mt-3">
                <div class="card-header bg-warning text-dark">
                    <h6 class="card-title mb-0">
                        <i class="fas fa-chart-line me-2"></i>
                        Deletion Impact Assessment
                    </h6>
                </div>
                <div class="card-body">
                    <div class="row text-center" id="impactAssessment">
                        <div class="col-md-4">
                            <div class="impact-item">
                                <div class="impact-value text-info">
                                    <i class="fas fa-spinner fa-spin"></i>
                                </div>
                                <div class="impact-label">Menu Items</div>
                                <small class="text-muted">Associated items</small>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="impact-item">
                                <div class="impact-value text-info">
                                    <i class="fas fa-spinner fa-spin"></i>
                                </div>
                                <div class="impact-label">Orders</div>
                                <small class="text-muted">Historical orders</small>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="impact-item">
                                <div class="impact-value text-info">
                                    <i class="fas fa-spinner fa-spin"></i>
                                </div>
                                <div class="impact-label">References</div>
                                <small class="text-muted">Other dependencies</small>
                            </div>
                        </div>
                    </div>
                    <div class="mt-3">
                        <div class="alert alert-info" role="alert">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Note:</strong> If this sub category is being used in menu items or has historical order data, 
                            consider <strong>deactivating</strong> it instead of deleting to maintain data integrity.
                        </div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons Card -->
            <div class="card shadow-sm mt-3">
                <div class="card-body">
                    <form asp-action="Delete" method="post" id="deleteForm">
                        <input asp-for="Id" type="hidden" />
                        
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="confirmDelete" required>
                                <label class="form-check-label text-danger fw-semibold" for="confirmDelete">
                                    I understand that this action cannot be undone
                                </label>
                            </div>
                            <div>
                                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary me-2">
                                    <i class="fas fa-edit me-1"></i>
                                    Edit Instead
                                </a>
                                <button type="button" class="btn btn-outline-warning me-2" onclick="toggleStatus()">
                                    <i class="fas @(Model.IsActive ? "fa-times" : "fa-check") me-1"></i>
                                    @(Model.IsActive ? "Deactivate" : "Activate") Instead
                                </button>
                                <button type="submit" class="btn btn-danger" id="deleteBtn" disabled>
                                    <i class="fas fa-trash-alt me-1"></i>
                                    Delete Permanently
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Html.AntiForgeryToken()
    <script>
        $(document).ready(function() {
            // Load impact assessment
            loadImpactAssessment();

            // Enable/disable delete button based on confirmation checkbox
            $('#confirmDelete').change(function() {
                const isChecked = $(this).is(':checked');
                $('#deleteBtn').prop('disabled', !isChecked);
                
                if (isChecked) {
                    $('#deleteBtn').removeClass('btn-danger').addClass('btn-outline-danger');
                } else {
                    $('#deleteBtn').removeClass('btn-outline-danger').addClass('btn-danger');
                }
            });

            // Form submission handler
            $('#deleteForm').on('submit', function(e) {
                e.preventDefault();
                
                if (!$('#confirmDelete').is(':checked')) {
                    toastr.error('Please confirm that you understand this action cannot be undone.', 'Confirmation Required');
                    return false;
                }

                // Show final confirmation using toastr
                toastr.error('Are you absolutely sure you want to delete this sub category? This action is PERMANENT and cannot be undone!<br/><br/>' +
                    '<button type="button" class="btn btn-danger btn-sm me-2" onclick="confirmDelete()">Yes, Delete Permanently</button>' +
                    '<button type="button" class="btn btn-secondary btn-sm" onclick="toastr.clear()">Cancel</button>', 
                    'Final Confirmation Required', {
                    allowHtml: true,
                    closeButton: false,
                    timeOut: 0,
                    extendedTimeOut: 0,
                    tapToDismiss: false
                });
            });
            
            // Global function for final deletion confirmation
            window.confirmDelete = function() {
                toastr.clear();
                toastr.info('Deleting sub category...', 'Please wait');
                
                // Disable delete button and show loading state
                $('#deleteBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin me-1"></i>Deleting...');
                
                // Submit the form
                $('#deleteForm')[0].submit();
            };
        });

        function loadImpactAssessment() {
            $.ajax({
                url: '@Url.Action("GetDeletionImpact", "SubCategory")',
                type: 'GET',
                data: { id: @Model.Id },
                success: function(response) {
                    if (response.success) {
                        updateImpactDisplay(response.data);
                    } else {
                        updateImpactDisplay({ menuItems: 0, orders: 0, references: 0 });
                    }
                },
                error: function() {
                    updateImpactDisplay({ menuItems: 0, orders: 0, references: 0 });
                }
            });
        }

        function updateImpactDisplay(data) {
            const impactItems = $('#impactAssessment .impact-item');
            
            // Update menu items
            $(impactItems[0]).find('.impact-value').html(data.menuItems || 0);
            
            // Update orders
            $(impactItems[1]).find('.impact-value').html(data.orders || 0);
            
            // Update references
            $(impactItems[2]).find('.impact-value').html(data.references || 0);

            // Show warning if there are dependencies
            const hasImpact = (data.menuItems || 0) > 0 || (data.orders || 0) > 0 || (data.references || 0) > 0;
            if (hasImpact) {
                showDependencyWarning(data);
            }
        }

        function showDependencyWarning(data) {
            let warningMessage = '<strong>Warning:</strong> This sub category has dependencies:<ul class="mb-0 mt-2">';
            
            if (data.menuItems > 0) {
                warningMessage += `<li>${data.menuItems} menu item(s) are associated with this sub category</li>`;
            }
            if (data.orders > 0) {
                warningMessage += `<li>${data.orders} historical order(s) reference this sub category</li>`;
            }
            if (data.references > 0) {
                warningMessage += `<li>${data.references} other system reference(s) exist</li>`;
            }
            
            warningMessage += '</ul>';

            const warningAlert = `
                <div class="alert alert-danger mt-3" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    ${warningMessage}
                    <div class="mt-2">
                        <strong>Recommendation:</strong> Consider deactivating this sub category instead of deleting it to preserve data integrity.
                    </div>
                </div>
            `;

            $('.card-body .alert-info').after(warningAlert);
        }

        function toggleStatus() {
            const currentStatus = @(Model.IsActive.ToString().ToLower());
            const action = currentStatus ? 'deactivate' : 'activate';
            
            toastr.info(`Are you sure you want to ${action} this sub category instead of deleting it?<br/><br/>` +
                `<button type="button" class="btn btn-warning btn-sm me-2" onclick="confirmToggleStatus('${action}')">Yes, ${action.charAt(0).toUpperCase() + action.slice(1)}</button>` +
                '<button type="button" class="btn btn-secondary btn-sm" onclick="toastr.clear()">Cancel</button>', 
                `Confirm ${action.charAt(0).toUpperCase() + action.slice(1)}`, {
                allowHtml: true,
                closeButton: false,
                timeOut: 0,
                extendedTimeOut: 0,
                tapToDismiss: false
            });
        }

        function confirmToggleStatus(action) {
            toastr.clear();
            toastr.info(`${action.charAt(0).toUpperCase() + action.slice(1)}ing sub category...`, 'Please wait');
            
            $.ajax({
                url: '@Url.Action("ToggleStatus", "SubCategory")',
                type: 'POST',
                data: { 
                    id: @Model.Id,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    toastr.clear();
                    if (response.success) {
                        toastr.success(`Sub category has been ${action}d successfully.`, 'Success');
                        
                        setTimeout(function() {
                            window.location.href = '@Url.Action("Index", "SubCategory")';
                        }, 2000);
                    } else {
                        toastr.error(response.message, 'Error');
                    }
                },
                error: function() {
                    toastr.clear();
                    toastr.error(`An error occurred while trying to ${action} the sub category.`, 'Error');
                }
            });
        }
    </script>

    <style>
        .info-group {
            border-bottom: 1px solid #e9ecef;
            padding-bottom: 0.75rem;
        }

        .info-label {
            font-weight: 600;
            color: #495057;
            font-size: 0.875rem;
            margin-bottom: 0.25rem;
            display: block;
        }

        .info-value {
            color: #212529;
            font-size: 1rem;
        }

        .impact-item {
            padding: 1rem 0;
        }

        .impact-value {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 0.5rem;
        }

        .impact-label {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        .card {
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

        #confirmDelete:checked + label {
            color: #dc3545 !important;
        }

        .btn-danger:disabled {
            opacity: 0.6;
        }
    </style>
}