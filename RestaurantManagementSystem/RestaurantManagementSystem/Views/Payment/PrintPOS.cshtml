@model PaymentViewModel
@{
    ViewData["Title"] = "POS Print";
    var settings = ViewBag.RestaurantSettings as RestaurantManagementSystem.Models.RestaurantSettings ?? new RestaurantManagementSystem.Models.RestaurantSettings { RestaurantName = "Restaurant Management System" };
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>POS Bill - Order #@Model.OrderNumber</title>
    <style>
        /* Narrow receipt style (approx 80mm) */
        body { font-family: Arial, Helvetica, sans-serif; width: 320px; margin: 0; padding: 6px; color: #000; }
        .center { text-align: center; }
        .small { font-size: 12px; }
        .tiny { font-size: 11px; }
        .divider { border-top: 1px solid #000; margin: 6px 0; }
        .dashed { border-top: 1px dashed #000; margin: 6px 0; }
        .item { display:flex; justify-content:space-between; margin:3px 0; font-size:13px; }
        .qty { width:36px; text-align:left; }
        .name { flex:1; padding:0 6px; word-break: break-word; }
        .price { width:70px; text-align:right; }
        .bold { font-weight:700; }
        .totals { margin-top:6px; font-size:13px; }
        .totals .row { display:flex; justify-content:space-between; margin:3px 0; }
        .right { text-align:right; }
        @@media print { body { margin:0; } }
    </style>
</head>
<body>
    <div class="center">
        <div style="font-size:18px; font-weight:700;">@settings.RestaurantName</div>
        @if (!string.IsNullOrWhiteSpace(settings.StreetAddress)) { <div class="tiny">@settings.StreetAddress</div> }
        @if (!string.IsNullOrWhiteSpace(settings.City)) { <div class="tiny">@settings.City @settings.State - @settings.Pincode</div> }
        @if (!string.IsNullOrWhiteSpace(settings.PhoneNumber)) { <div class="tiny">Phone: @settings.PhoneNumber</div> }
        @if (!string.IsNullOrWhiteSpace(settings.GSTCode)) { <div class="tiny">GSTIN: @settings.GSTCode</div> }
    </div>

    <div class="dashed"></div>

    <div class="tiny">
        <div><strong>Name:</strong> ____________________________</div>
        <div style="display:flex; justify-content:space-between; margin-top:6px;">
            <div>Date: @DateTime.Now.ToString("dd/MM/yy")</div>
            <div>Dine In: @Model.TableName</div>
        </div>
        <div style="display:flex; justify-content:space-between; margin-top:2px;">
            <div>Time: @DateTime.Now.ToString("HH:mm")</div>
            <div>Cashier: @(Model.Payments.FirstOrDefault()?.ProcessedByName ?? "biller")</div>
        </div>
        <div style="margin-top:2px;">Bill No: @Model.OrderNumber</div>
    </div>

    <div class="dashed"></div>

    <div style="font-weight:700; display:flex; justify-content:space-between;">
        <div style="width:55%">Item</div>
        <div style="width:12%; text-align:center">Qty</div>
        <div style="width:16%; text-align:right">Price</div>
        <div style="width:16%; text-align:right">Amount</div>
    </div>

    <div class="dashed"></div>

    <div>
        @foreach (var item in Model.OrderItems)
        {
            <div class="item">
                <div class="name">@item.MenuItemName</div>
                <div class="qty">@item.Quantity</div>
                <div class="price">₹@item.UnitPrice.ToString("F0")</div>
                <div class="price">₹@item.Subtotal.ToString("F0")</div>
            </div>
        }
    </div>

    <div class="dashed"></div>

    <div class="totals">
        @{ 
            var subtotal = Model.Subtotal;
            // Prefer explicit properties if present; fall back to TaxAmount and GSTPercentage
            decimal taxTotal = 0M;
            decimal gstPercent = 0M;
            try { taxTotal = Model.TaxAmount; } catch { taxTotal = 0M; }
            try { gstPercent = Model.GSTPercentage; } catch { gstPercent = 0M; }
            var cgstAmt = Math.Round(taxTotal / 2, 2);
            var sgstAmt = Math.Round(taxTotal - cgstAmt, 2);
            var cgstPercent = Math.Round(gstPercent / 2, 2);
            var sgstPercent = Math.Round(gstPercent - cgstPercent, 2);
            var discount = (Model.DiscountAmount > 0) ? Model.DiscountAmount : 0M;
            var total = Model.TotalAmount;
            var grandRounded = Math.Round(total);
            var roundOff = grandRounded - total;
        }

        <div class="row"><div>Sub Total</div><div class="right">₹@subtotal.ToString("F2")</div></div>
        <div class="row"><div>CGST @cgstPercent% </div><div class="right">₹@cgstAmt.ToString("F2")</div></div>
        <div class="row"><div>SGST @sgstPercent% </div><div class="right">₹@sgstAmt.ToString("F2")</div></div>
        @if (discount > 0)
        {
            <div class="row"><div>Discount</div><div class="right">-₹@discount.ToString("F2")</div></div>
        }
        <div class="row"><div>Round off</div><div class="right">₹@roundOff.ToString("F2")</div></div>
        <div class="row bold"><div style="font-size:15px;">Grand Total</div><div class="right" style="font-size:16px;">₹@grandRounded.ToString("F0")</div></div>
    </div>

    <div class="dashed"></div>
    <div class="center tiny">
        @if (!string.IsNullOrWhiteSpace(settings.FssaiNo)) { <div>FSSAI Lic No: @settings.FssaiNo</div> }
        <div style="margin-top:6px;">Thanks For Visit Again !!</div>
    </div>

    <script>
        window.onload = function() { window.print(); };
    </script>
</body>
</html>
